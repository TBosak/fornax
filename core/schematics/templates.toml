[component]
html = "<div>Hello, <%= name %> Component!</div>"
css = """
/* Styles for <%= name %> */
div{
color: blue;
}
"""
ts = """
import {Component, BaseComponent} from "fornaxjs";
import html from "./<%= name.toLowerCase() %>.component.html" with { type: "text" };
import styles from "./<%= name.toLowerCase() %>.component.css";
<%- \n %>
@Component({selector: "app-<%= name %>",
  template: html,
  style: styles,
})
<%- \n %>
export class <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>Component extends BaseComponent {
<%- \n %>
onInit() {
}
<%- \n %>
onDestroy() {
}
<%- \n %>
}
"""

[controller]
controller = """
import {
  Controller,
  Get,
  ControllerBase,
  Post,
  type Context,
} from "fornaxjs/server";
import { <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> } from "../models/<%= name %>";
<%- \n %>
@Controller("/<%= name %>")
export class <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>Controller extends ControllerBase {
  @Post("/", { body: <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> }, <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>)
  async create<%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>(ctx: Context) {
    const body = await ctx.req.json();
    return this.Ok(ctx, body);
  }
<%- \n %>
  @Get("/:id", { params: Number }, <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>)
  async get<%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>(ctx: Context) {
    const id = ctx.req.param("id");
    return this.Ok(ctx, {id});
  }
}
"""
model = """
import { Model, Number } from "fornaxjs/server";
<%- \n %>
@Model()
export class <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> {
<%- \n %>
  @Number({ example: 1, description: "Unique identifier for the <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>" })
  id!: string;
  }
"""
