[component]
html = "<div>Hello, <%= name %> Component!</div>"
css = """
/* Styles for <%= name %> */
div{
color: blue;
}
"""
ts = """
import {Component, BaseComponent} from "fornaxjs";
import html from "./<%= name.toLowerCase() %>.component.html" with { type: "text" };
import styles from "./<%= name.toLowerCase() %>.component.css";
<%- \n %>
@Component({selector: "app-<%= name %>",
  template: html,
  style: styles,
})
<%- \n %>
export class <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>Component extends BaseComponent {
<%- \n %>
onInit() {
}
<%- \n %>
onDestroy() {
}
<%- \n %>
}
"""

[controller]
controller = """
import {
  Controller,
  Get,
  ControllerBase,
  Post,
  type Context,
} from "fornaxjs/server";
import { <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> } from "../models/<%= name %>";
<%- \n %>
@Controller("/<%= name %>")
export class <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>Controller extends ControllerBase {
  @Post("/", { body: <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> }, <%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>)
  async create<%- name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>(ctx: Context) {
    const body = await ctx.req.json();
    return this.Ok(ctx, body);
  }
<%- \n %>
  @Get("/:id", { params: Number }, <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>)
  async get<%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>(ctx: Context) {
    const id = ctx.req.param("id");
    return this.Ok(ctx, {id});
  }
}
"""
model = """
import { Model, Number } from "fornaxjs/server";
<%- \n %>
@Model()
export class <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %> {
<%- \n %>
  @Number({ example: 1, description: "Unique identifier for the <%= name.replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()) %>" })
  id!: string;
  }
"""
[project]
files = [
  { path = "src/client/components", isDir = true },
  { path = "src/client/services", isDir = true },
  { path = "src/client/assets", isDir = true },
  { path = "src/server/controllers", isDir = true },
  { path = "src/server/models", isDir = true },
  { path = "package.json", template = """
  {
  "name": "<%= name %>",
  "type": "module",
  "scripts": {
    "dev": "fnx dev"
    "build": "fnx build"
    "start": "fnx start"
  },
  "devDependencies": {
    "@types/bun": "latest"
  },
  "peerDependencies": {
    "typescript": "^5.0.0",
    "fornaxjs": "latest"
  }
}
  """ },
  { path = "fornax.config.ts", template = """
  export default {
  Client: {
    srcDir: "./src/client",
    distDir: "./dist",
    port: 5000,
    plugins: [],
    entryPoints: [],
    alternateStyleLoader: null,
  },
  Server: {
    dir: "./src/server",
    port: 5500,
    cors: {
      origin: "*",
    },
  },
};
  """ },
  { path = "src/client/router.ts", template = """
  import { addRouter } from "fornaxjs";
  import { HelloWorld } from "./components/hello-world.component";

export const routes: any[] = [
  { path: "/", component: HelloWorld },
];

addRouter("router-outlet", routes);
  """ },
  { path = "src/client/index.html", template = """
  <!doctype html>
  <html>
    <head>
      <script src="./main.js" type="module"></script>
      <title>Welcome</title>
      <link rel="icon" type="image/x-icon" href="favicon.ico" />
      <link
        rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css"
      />
    </head>
    <body>
      <app-component></app-component>
    </body>
  </html>
  """ },
  { path = "src/client/app.component.ts", template = """
  import { Component, BaseComponent } from "fornaxjs";

@Component({
  selector: "app-component",
  style: `nav { margin-left: 3em; margin-right: 3em; }
          .container { text-align: center; }`,
  template: `
    <nav>
      <ul>
        <li><strong>Fornax</strong></li>
      </ul>
      <ul>
        <li><a href="/">Hello World</a></li>
      </ul>
    </nav>
    <div class="container">
      <router-outlet></router-outlet>
    </div>
  `,
})
export class AppComponent extends BaseComponent {}
  """ },
  { path = "src/client/components/hello-world.component.ts", template = """
  import { Component, BaseComponent, Context } from "fornaxjs";
import { ApiService } from "../services/api.service";

@Component({
  selector: "hello-world",
  template: `
    <img src="assets/logo.png" />
    <h1>Hello {{ name }}!</h1>
    <p>{{ apiResponse }}</p>
    <a id="bottom-corner" href="https://github.com/TBosak/fornax"
      >Star us on GitHub!</a
    >
  `,
  style: `
    img { width: 10em; margin-bottom: 2em; }
    h1 { color: blue !important; }
    p { font-family: simport { const } from './../../../node_modules/bun-types/bun.d';
ans-serif; }
    #bottom-corner { position: fixed; bottom: 0; right: 0; padding: 1em; background: #333; color: white; text-decoration: none; }
  `,
})
export class HelloWorld extends BaseComponent {
  name = "World";
  apiResponse = "Loading...";
  names: string[] = ["World", "GitHub", "Reddit", "Friends"];
  interval: any = setInterval(() => this.cycleNames(), 2000);

  cycleNames() {
    let name = this.names.shift() as string;
    this.names.push(name);
    this.name = name;
  }

  onInit(): void {
    const apiService: ApiService = Context.get("ApiService");
    this.apiResponse = apiService.getData();
  }
}
  """ },
  { path = "src/client/services/api.service.ts", template = """
  import { Service } from "fornaxjs";

@Service("ApiService")
export class ApiService {
  getData() {
    return "Welcome to Fornax!";
  }
}
  """ },
]
